{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "API Geolocator Output Config Schema",
  "type": "object",
  "version": 1.0,
  "comments": "Schema for GeoView-API-geolocator output-query results.",
  "additionalProperties": false,

  "definitions": {
    "output": {
      "type": "array",
      "description": "Array of results were each item is the output from the requested API key.",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Origin API key value."
          },
          "name": {
            "type": "string",
            "description": "Name information of the item."
          },
          "lat": {
            "type": "number",
            "minimum": -90,
            "maximum": 90,
            "description": "Latitude of the item."
          },
          "lng": {
            "type": "number",
            "minimum": -180,
            "maximum": 180,
            "description": "Longitude of the item."
          },
          "bbox": {
            "type": "array",
            "minItems": 4,
            "items": [
              {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "West border of the bounding box."
              },
              {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "South border of the bounding box."
              },
              {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "description": "East border of the bounding box."
              },
              {
                "type": "number",
                "minimum": -90,
                "maximum": 90,
                "description": "North border of the bounding box."
              }
            ],
            "description": "The bbox of the item [minX, minY, maxX, maxY]. Optional return value."
          },
          "province": {
            "type": "string",
            "description": "The province the item belongs to. Optional return value, may be derived from the name parameter."
          },
          "tag": {
            "type": "array",
            "minItems": 0,
            "items": {
              "type": "string",
              "description": "The content of this field might vary depending of the sources."
            },
            "description": "The tag value of the item. Optional return value. tags may be different from one API to the other, it is a value to help understand what type of item it is."
          }
        },
        "required": ["name", "lat", "lng"],
        "additionalProperties": false
      }
    }
  },
  "properties": {
    "geonames": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/output" },
      "description": "The Geoname api result set."
    },
    "nominatim": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/output" },
      "description": "The Nominatim api result set."
    },
    "locate": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/output" },
      "description": "The locate api result set."
    },
    "nts": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/output" },
      "description": "The ens api result set."
    }
  },
  "description": "List of supported key for the API. As we add key, we need to had an entry in the schema. The entry MUST be the same key as the in in-api-schema.json (keys enum parameter)."
}